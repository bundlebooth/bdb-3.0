Step 9: Update Frontend to Use the API

Modify your frontend JavaScript to make API calls to your Render endpoint:
javascript

// Example: Fetch venues
async function fetchVenues() {
  try {
    const response = await fetch('https://venuevue-api.onrender.com/api/venues');
    const data = await response.json();
    // Update your UI with the data
  } catch (error) {
    console.error('Error fetching venues:', error);
  }
}

// Example: User login
async function loginUser(email, password) {
  try {
    const response = await fetch('https://venuevue-api.onrender.com/api/users/login', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({ email, password }),
    });
    const data = await response.json();
    // Store the token and user data
  } catch (error) {
    console.error('Login failed:', error);
  }
}

Step 10: Implement CORS Properly

Update your app.js to configure CORS for your frontend domain:
javascript

const corsOptions = {
  origin: ['https://your-venuevue-frontend.com', 'http://localhost:3000'],
  methods: ['GET', 'POST', 'PUT', 'DELETE'],
  allowedHeaders: ['Content-Type', 'Authorization'],
};

app.use(cors(corsOptions));
